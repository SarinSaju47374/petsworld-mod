<!DOCTYPE html>
<html>

<head>
    <title>Order Invoice</title>
    <style>
        body {
            background-color: #0b243b;
            color: rgb(83, 79, 79);
            font-family: Arial, sans-serif;
        }

        a {
            text-decoration: none;
        }

        img {
            height: 8rem;
        }

        #my-canvas {

            position: absolute;
            z-index: 1;
        }

        .order-invoice {
            max-width: 600px;
            margin: 1rem auto;
            padding: 20px;
            background-color: rgba(248, 255, 255, 0.949);
            border-radius: 2rem;
            border: orange solid 1px;
            z-index: 9;
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .order-header h1 {
            font-size: 24px;
        }

        .order-header span {
            font-size: .8rem;
        }

        .order-details {
            margin-bottom: 30px;
        }

        .order-details table {
            width: 100%;
            border-collapse: collapse;
        }

        .order-details th,
        .order-details td {
            padding: 10px;
            text-align: center;
            overflow: hidden;

        }

        .order-details tbody td {
            height: 4rem;
        }

        .order-details td img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .order-details th {
            background-color: #1c3e5a;
            color: white;
        }

        .order-status {
            margin-bottom: 30px;
            display: flex;
            flex-direction: column;
            gap: 1rem;

        }

        .order-status .status-slider {
            display: flex;
            justify-content: center;
            align-items: center;
            color: black;

        }

        .order-status .status-slider .slider-item {
            flex: 1;
            text-align: center;
            font-size: .75rem;
            padding: 10px;
            border: 1px solid #ddd;
            cursor: pointer;
            background-color: #f5f5f5;
            height: 2rem;
            display: grid;
            place-items: center;
        }

        .order-status .status-slider .slider-item.active {
            background-color: rgb(255, 115, 0);
            font-weight: bold;
            color: white;
        }

        .order-status .status-slider .slider-item.active2 {
            background-color: rgb(51, 255, 0);
            font-weight: bold;
            color: white;
        }

        .order-status h5 {
            color: orange;
        }

        .thank-you {
            text-align: center;
            margin-bottom: 20px;
        }

        .container {
            display: flex;

        }

        .cancel-order-btn {
            display: block;
            margin: 0 auto;
            padding: 10px 20px;
            background-color: #ff0000;
            color: #fff;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
            min-width: 5rem;
            transition: all 300ms ease;
        }

        .cancel-order-btn:hover {
            opacity: 0.8;
        }

        textarea {
            background-color: #0b243b;
            border: 1px solid gray;
            border-radius: 23px;
            font-size: 1.3rem;
            height: 10rem;
            outline: none;
            padding-left: 1rem;
            color: white;
            width: 95%;
        }

        textarea::placeholder {
            font-size: 1.5rem;
        }

        .checkout-bs-form {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            /* display: flex; */
            box-sizing: border-box;
            min-height: 20vh;
            background-color: #0b243b;
            width: 40%;
            padding: 2rem;
            border-radius: 1rem;
            border: 1px solid rgb(6, 230, 246);

                {
                    {
                    !-- overflow-y: scroll;
                    --
                }
            }

            z-index:22;
        }

        .checkout-bs-form form {
            width: 100%;

                {
                    {
                    !-- height: 80vh;
                    --
                }
            }

            display: flex;
            flex-direction: column;
            /* justify-content: space-between; */

        }

        .checkout-bs-form form .changeAdd {
            color: white;
            background-color: orange;
            padding: 1rem;
            width: 10rem;
            text-align: center;
            margin-top: 1rem;
            border-radius: 12px;
            cursor: pointer;
        }

        .checkout-bs-form form .changeAdd:hover {
            background-color: rgb(249, 141, 0);
        }

        .checkout-bs-form form .bck-cart {
            color: white;
            margin-top: 1rem;
        }

        .status-slider {
            height: 5rem;
        }

        .order-status>div {
            display: flex;
            flex-direction: column;
            align-items: left;
        }

        @media screen and (max-width:768px) {
            .order-invoice {
                max-width: 80%;
            }

            .order-header {
                flex-direction: column;
            }

            .order-status {
                gap: 1rem;
            }

            .order-status>div {
                display: flex;
                flex-direction: column;
                align-items: left;
            }

            .order-details {
                overflow-x: scroll;
            }

            .checkout-bs-form {
                width: 90%;
            }
        }
    </style>
</head>

<body>
    {{#if couponName}}
        <div class="coupon" data-cp="{{couponName}}"></div>
    {{/if}}
    <div class="checkout-bs-form"  style="z-index:23;">
        <h4 style="color:#f5d6b2">Reason To Cancel The Order</h4>
        <form method="POST" onsubmit="submitFrm(event)">

            <div class="address"><textarea id="addr" name="addr" id="addr" rows="4" cols="40"
                    placeholder="Whats the reason that you are cancelling?returning the order!" required></textarea></div>

            <input type="text" name="oid" id="oid" hidden>
            <input type="text" name="pid" id="pid" hidden>
            <input type="text" name="type" id="types" hidden>
            <button type="submit" class="changeAdd">Submit</button>
            <a style="background-color:red" onclick="clsForm()" class="changeAdd">Close</a>
        </form>
    </div>
    <canvas id="my-canvas" style="z-index:9"></canvas>
    <div class="order-invoice" data-aos="flip-left" data-oid="{{order._id}}">
        <div class="order-header">
            <h1>Order Invoice</h1>
            <span>Order ID: #PTSW{{order._id}}</span>
            <span>Date: {{convert order.date}}</span>
        </div>

        <div class="order-details">
            <table>
                <thead>
                    <tr>
                        <th>Product Image</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each order.products}}
                    <tr>
                        <td><img src="{{this.productId.photo.[0].filepath}}" alt="Product 2"></td>
                        <td>{{this.productId.productName}}</td>
                        <td>Rs {{this.salePrice}}</td>
                        <td>{{this.quantity}}</td>
                    </tr>
                    {{/each}}
                    <!-- Add more rows for other products -->
                </tbody>
            </table>
        </div>

        <div class="order-total">
            <h3>Total Price: Rs {{order.totalPrice}}</h3>
        </div>

        <div class="order-status">
            <h2>Order Status</h2>

        </div>

        <div class="thank-you">
            <h2>Thank You!</h2>
            <p>Your order has been successfully processed.</p>
            <img src="https://cutewallpaper.org/24/dog-transparent-gif/john-4de47-lewis-ae15a-dog-0f313-gifs-becd4-on-6b583-behance.gif"
                alt="Thank You">
        </div>

        <div class="container">
            <a href="/" class="cancel-order-btn" style="background-color:green"> Back to Home</a>

        </div>
    </div>
    {{!-- /*To make it work i used app.use(express.static(node_modules))*/ --}}
    <script src="/confetti-js/dist/index.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> 
    <script>

        //Confetti
        var confettiElement = document.getElementById('my-canvas');
        var confettiSettings = { target: confettiElement, clock: 80 };
        var confetti = new ConfettiGenerator(confettiSettings);
        var form = document.querySelector(".checkout-bs-form")
        function start() {
            setTimeout(() => {
                confetti.render()
            }, 0)
        }
        function stop() {
            setTimeout(() => {
                confetti.clear()
            }, 8000)
        }
        start();
        stop();
        //Confetti

        var statusSlider = document.querySelector(".status-slider");
        var oid = document.querySelector(".order-invoice").dataset.oid;
        var orderStatus = document.querySelector(".order-status");
        function diff(d1, d2) {
            d1 = new Date(d1);
            d2 = new Date(d2);
            return (d1 - d2) / (1000 * 60 * 60 * 24);
        }
        function clsForm() {
            form.style.display = "none";
        }
        function cancel(oid, pid) {
            console.log(oid, pid);
            console.log(form)
            form.style.display = "block";
            document.querySelector("#oid").value = oid;
            document.querySelector("#pid").value = pid;
            document.querySelector("#types").value = "cancel";
            
        }
        function returnOrdr(oid, pid) {
            console.log(oid, pid);
            form.style.display = "block";
            document.querySelector("#oid").value = oid;
            document.querySelector("#pid").value = pid;
            document.querySelector("#types").value = "returnOrdr";
            
        }
        async function submitFrm(event) {
            event.preventDefault();
            let data = {
                oid: document.querySelector("#oid").value,
                pid: document.querySelector("#pid").value
            }
            let type = document.getElementById("types").value;
            try {
                const response = await fetch(`/cart/order/${type}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                let status = await response.json();
                console.log(status);
                if (status.sent) {
                    form.style.display = "none";
                }
                if (!response.ok) {
                    throw new Error('Failed to cancel order');
                }
            } catch (err) {
                console.log(err);
            }
        }
        async function fetchStatus() {
            // Simulated asynchronous API call to fetch the status
            console.log(oid);
            let response = await fetch(`/cart/order2/real-time/${oid}`);
            if (!response.ok) return;

            const products = await response.json();
            //

            if (!products.valid) return;
            // Update the status slider HTML based on the received status
            orderStatus.innerHTML = "";
            products.products.forEach(val => {
                switch (val.status) {
                    case "orderPlaced":
                        orderStatus.innerHTML += `
                        <div>
                            <h4>${val.productId.productName}</h4>
                            <h5>Delivery expected within ${diff(val.expectedDelivery, val.orderPlaced)} days</h5>
                            <a onclick="cancel('${products.oid}','${val.productId._id}')" class="cancel-order-btn">Cancel Order</a>
                            <div class="status-slider">
                                <div class="slider-item active">Order Placed</div>
                                <div class="slider-item">Order Shipped</div>
                                <div class="slider-item">Order On-Route</div>
                                <div class="slider-item">Order Delivered</div>
                            </div>
                        </div>`
                        break;
                    case "orderShipped":
                        orderStatus.innerHTML += `
                        <div>
                            <h4>${val.productId.productName}</h4>
                            <h5>Delivery expected within ${diff(val.expectedDelivery, val.orderShipped)} days</h5>
                            <a href="/home" class="cancel-order-btn">Cancel Order</a>
                            <div class="status-slider">
                                <div class="slider-item ">Order Placed</div>
                                <div class="slider-item active">Order Shipped</div>
                                <div class="slider-item">Order On-Route</div>
                                <div class="slider-item">Order Delivered</div>
                            </div>
                        </div>`
                        break;
                    case "orderOnRoute":
                        orderStatus.innerHTML += `
                        <div>
                            <h4>${val.productId.productName}</h4>
                            <h5>Delivery expected within ${diff(val.expectedDelivery, val.orderOnRoute)} days</h5>
                            <a href="#" onclick="cancel(${products._id},${val.productId._id})" class="cancel-order-btn">Cancel Order</a>
                            <div class="status-slider">
                                <div class="slider-item ">Order Placed</div>
                                <div class="slider-item">Order Shipped</div>
                                <div class="slider-item active">Order On-Route</div>
                                <div class="slider-item">Order Delivered</div>
                            </div>
                        </div>`
                        break;
                    case "orderDelivered":
                        orderStatus.innerHTML += `
                        <div>
                            <h4>${val.productId.productName}</h4>
                            <h5>${new Date(val.orderDelivered).toLocaleDateString()}</h5>
                            <a href="#" onclick="returnOrdr(${products._id},${val.productId._id})" class="cancel-order-btn">Return Order</a>
                            <div class="status-slider">
                                <div class="slider-item">Order Placed</div>
                                <div class="slider-item">Order Shipped</div>
                                <div class="slider-item">Order On-Route</div>
                                <div class="slider-item active">Order Delivered</div>
                            </div>
                        <div>`
                        break;
                    case "orderCancelled":
                        orderStatus.innerHTML += `
                        <div>
                            <h4>${val.productId.productName}</h4>
                            <h5>${new Date(val.orderCancelled).toLocaleDateString()}</h5>
                            <h2 style="color:red">Order Cancelled</h2> 
                        </div>`
                        break;
                    default:
                        break;
                }
            })
        }
        // Initial fetch of status

 

        document.addEventListener("DOMContentLoaded", () => {
            if(document.querySelector(".coupon")){
                 
                let det=JSON.parse(document.querySelector(".coupon").dataset.cp)
                 
                Swal.fire({
                    title: 'You Earned A Coupon!',
                    text: `Coupon: ${det.name} (${det.discount}% discount)`,
                    imageUrl: 'https://i.pinimg.com/originals/97/e2/0f/97e20f80e51dcaf17a3b78a860d8e43a.gif',
                    imageWidth: 400,
                    imageHeight: 200,
                    imageAlt: 'Custom image',
                })
            }
             fetchStatus();
            // Fetch the status every 5 seconds
            let id = setInterval(fetchStatus, 5000);
            clearInterval(id);
           
        })

    </script>
</body>

</html>