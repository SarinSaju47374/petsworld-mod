<main>
    <h1>Customers</h1>
    {{!-- <div class="date">
        <input type="date">
    </div> --}}

    
    {{!-- Product Add --}}

    <div class="table-admin">
        <h2>Customer View</h2> 
        <div class="search-options">
            <div class="input-admin">
                <input type="text" placeholder="Search here..">
                <i  class="fa-solid fa-magnifying-glass" style = "margin-right:1rem"></i>
            </div>
            <select class="category" hidden>
                <option value="">All</option>
            </select>
             

        </div>
        <div class="table">
            <table>
                <thead>
                <tr>
                    <th>userName</th>
                    <th>FirstName</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th> </th>
                </tr>
                </thead>
                <tbody>
                {{!-- DYNAMIC DATA --}}
                </tbody>
            </table>
        </div>
        <div class="pagination">
                <ul></ul>
        </div>
    </div>

{{!-- END OF users --}}
 
</main>

{{!-- END OF MAIN --}}

<div class="right">
    <div class="top">
        <button id="menu-btn">
            <i class="fa-solid fa-bars"></i>
        </button>
        <div class="theme-toggler">
            <i class="fa-solid fa-sun active"></i>
            <i class="fa-solid fa-moon"></i>
        </div>
        <div class="profile">
            <div class="info">
                <p>Hey , <b>Sarin </b></p>
                <small class="text-muted">ADMIN</small>
            </div>
            <div class="profile-photo">
                <img src="/images/profile.jpg" alt="#">
            </div>
        </div>
    </div>
    {{!-- <div class="recent-updates">
        <h2>Recent Updates</h2>
        <div class="updates">
            <div class="update">
                <div class="profile-photo">
                    <img src="/images/profile2.jpg" alt="">
                </div>
                <div class="message">
                    <p><b>Mike Tyson</b> recieved his order of Dog Food Pedigree!</p>
                    <small class="text-muted">2 minutes ago</small>
                </div>
            </div>
            <div class="update">
                <div class="profile-photo">
                    <img src="/images/profile3.jpg" alt="">
                </div>
                <div class="message">
                    <p><b>Mike Tyson</b> recieved his order of Dog Food Pedigree!</p>
                    <small class="text-muted">2 minutes ago</small>
                </div>
            </div>
            <div class="update">
                <div class="profile-photo">
                    <img src="/images/profile4.jpg" alt="">
                </div>
                <div class="message">
                    <p><b>Mike Tyson</b> recieved his order of Dog Food Pedigree!</p>
                    <small class="text-muted">2 minutes ago</small>
                </div>
            </div>
        </div>
    </div> --}}
    
</div>
<script src="/JS/adminContent.js"></script>
<script>
    const sideBarOpts = document.querySelectorAll(".sidebar a");
     

    sideBarOpts.forEach(a=>{
        a.classList.remove("active");
    })
    sideBarOpts[1].classList.add("active");
</script>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> 
<script>
    //REQUIRED DOM DATA
    let tableTbody = document.querySelector(".table-admin table tbody");
    let input = document.querySelector(".input-admin input");
    let category = document.querySelector(".search-options .category");
    let totalPages;
    let subCategory = document.querySelector(".search-admin .subCategory");    
    //REQUIRED DOM DATA

    //Numbered FLAG
    let flag;
    //Numbered FLAG

    
    //SEARCH LOGIC
    input.addEventListener("input",()=>{
        flag=1;
        const searchTerm = input.value.trim();
        run(`custom/users?s=${searchTerm}`);
    })
    //SEARCH LOGIC
    
    //CATEGORY SELECTION LOGIC
    category.addEventListener("change",async()=>{
        flag=2
        const option = category.value;
        run(`custom/products?cat=${option}`);
        const response = await fetch(`/custom/products?cat=${option}`); // Replace with your API endpoint URL
            if (!response.ok) {
                throw new Error('Request failed with status: ' + response.status);
            }
            const pr = await response.json();
            totalPages = Math.ceil(pr.total/pr.limit);
            element(totalPages,1,)
    })
    //CATEGORY SELECTION LOGIC
     
    //RUN FETCHING DATA
    async function run(url){
        try {
            const response = await fetch(url); // Replace with your API endpoint URL
            if (!response.ok) {
            throw new Error('Request failed with status: ' + response.status);
            }
            const usr = await response.json();
             
            if(!usr.products){
                tableTbody.innerHTML="No Data";
            }
            
            tableTbody.innerHTML="";
            usr.users.forEach(u=>{
                tableTbody.innerHTML+=`<tr>
                                            <td>${u.userName}</td>
                                            <td>${u.fName}</td>
                                            <td>${u.lName}</td>
                                            <td>${u.email}</td>
                                            ${u.isBlocked?"<td class=\"danger\">Blocked</td>":"<td class=\"warning\">Active</td>"} 
                                            ${u.isBlocked?`<td><a href="#" onclick="showPopupUn(event,\`${u._id}\`)" class="butn btn-updt">UnBlock</a></td>`
                                                            :`<td><a href="#" onclick="showPopup(event,\`${u._id}\`)" class="butn btn-del">Block</a></td>`} 
                                            
                                      </tr>`;
            })
        } catch (error) {
            // Handle any errors that occurred during the fetch
            console.log('Error:', error.message);
                
        }
    }
    //RUN FETCHING DATA
    
    
    // *************PAGINATION UI******************
    //selecting required Element
    const ulTag = document.querySelector("ul");
    
    function element(totalPages,page){
        flag=3;
        let liTag = "";
        let beforePages = page-1;
        let afterPages = page+1;
        let activeLi;
        
        if(page>1){
            liTag+=`<li class="btn prev" onclick="element(totalPages,${beforePages})"><span><i class="fa-solid fa-chevron-left"></i></span>Prev</li>`;
        }
        if(page>2){
            liTag+=`<li class="numb ${activeLi}" onclick="element(totalPages,1)"><span>1</span></li>`;
            if(page>3){
            liTag+=`<li class="dots"><span>....</span></li>`
            }
        }
        
        {{!-- //how many pages or li show before the current li
        if(page==1){
            afterPages=afterPages+2;
        }else if( page==2){
            afterPages=afterPages+1;
        }
        
        //how many pages or li show before the current li
        if(page==totalPages){
            beforePages=beforePages-2;
        }else if( page==totalPages-1){
            beforePages=beforePages-1;
        }
         --}}
        for(let pageLength=beforePages;pageLength<=afterPages;pageLength++){
            if(pageLength>totalPages|| pageLength <= 0){
            continue;
            }
            if(pageLength<1){
            pageLength = pageLength+1;
            }
            if(page==pageLength){
            activeLi="active";
            }else{
            activeLi="";
            }
            liTag+=`<li class="numb ${activeLi}" onclick="element(totalPages,${pageLength})"><span>${pageLength}</span></li>`;
        }
        
        if(page<totalPages-1){
            if(page<totalPages-2){
            liTag+=`<li class="dots"><span>....</span></li>`
            }
            liTag+=`<li class="numb" onclick="element(totalPages,${totalPages})"><span>${totalPages}</span></li>`;
        }
        
        if(page<totalPages){
        liTag+=`<li class="btn next" onclick="element(totalPages,${afterPages})">Next<span><i class="fa-solid fa-chevron-right"></i></span></li>`; 
        }
        ulTag.innerHTML=liTag;
        console.log(page);
        run(`custom/users?p=${page}`)
    }
    
    // *************PAGINATION UI******************

    //ALERT POPOUP BEFORE DELETE
    function showPopup(event, categoryId) {
        event.preventDefault();
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to delete this product",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete this Product!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Redirect to the unhide action
                window.location.href = `/product-view?delete_oid=${categoryId}`;
            }
        });
        }
         
        document.addEventListener("DOMContentLoaded", async function() {
        // DOM manipulation and other code here
        run('/custom/users');
        const response = await fetch("/custom/users"); // Replace with your API endpoint URL
            if (!response.ok) {
                throw new Error('Request failed with status: ' + response.status);
            }
            const usr = await response.json();
            console.log(usr);
            /*!-- const pr = await response.json();
            if(pr.categories){
                pr.categories.forEach(cat=>{
                    category.innerHTML+=`<option value="${cat}">${cat}</option>`;
                })
            } */
            totalPages = Math.ceil(usr.total/usr.limit);
            element(totalPages,1)
        
        });
    function showPopup(event, categoryId) {
        event.preventDefault();
        Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to delete this product",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete this Product!'
        }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = `/product-view?delete_oid=${categoryId}`;
        }
        });
    }
            
    </script>
    <script>
   

    

  function showPopupUn(event, categoryId) {
        event.preventDefault();
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to unblock this user",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, unblock this user'
        }).then((result) => {
            if (result.isConfirmed) {
                // Redirect to the unhide action
                window.location.href = `/user-view?unBlock_oid=${categoryId}`;
            }
        });
    }
    function showPopup(event, categoryId) {
        event.preventDefault();
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to block this User",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Block the User!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Redirect to the unhide action
                window.location.href = `/user-view?block_oid=${categoryId}`;
            }
        });
    }

</script>
 


 